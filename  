drop table UP_USER if exists;
drop table UP_USER_LOCALE if exists;
drop table UP_PERMISSION if exists;
drop table UP_USER_LAYOUT if exists;
drop table UP_LAYOUT_STRUCT if exists;
drop table UP_LAYOUT_PARAM if exists;
drop table UP_SEQUENCE if exists;
drop table UP_USER_PROFILE if exists;
drop table UP_GROUP if exists;
drop table UP_ENTITY_TYPE if exists;
drop table UP_GROUP_MEMBERSHIP if exists;
drop table UP_ENTITY_CACHE_INVALIDATION if exists;
drop table UP_ENTITY_LOCK if exists;
drop table UP_ENTITY_PROP if exists;
create table UP_USER (USER_ID integer not null, USER_NAME varchar(35), USER_DFLT_USR_ID integer, USER_DFLT_LAY_ID integer, NEXT_STRUCT_ID integer, LST_CHAN_UPDT_DT timestamp, primary key (USER_ID), unique (USER_NAME));
create table UP_USER_LOCALE (USER_ID integer not null, LOCALE varchar(64) not null, PRIORITY integer, primary key (USER_ID, LOCALE));
create table UP_PERMISSION (OWNER varchar(255), PRINCIPAL_TYPE integer, PRINCIPAL_KEY varchar(255), ACTIVITY varchar(255), TARGET varchar(255), PERMISSION_TYPE varchar(255), EFFECTIVE timestamp, EXPIRES timestamp);
create table UP_USER_LAYOUT (LAYOUT_ID integer not null, USER_ID integer not null, LAYOUT_TITLE varchar(15), INIT_STRUCT_ID integer, primary key (LAYOUT_ID, USER_ID));
create table UP_LAYOUT_STRUCT (USER_ID integer not null, LAYOUT_ID integer not null, STRUCT_ID integer not null, NEXT_STRUCT_ID integer, CHLD_STRUCT_ID integer, EXTERNAL_ID varchar(64), CHAN_ID integer, NAME varchar(35), TYPE varchar(35), HIDDEN varchar(1), IMMUTABLE varchar(1), UNREMOVABLE varchar(1), primary key (LAYOUT_ID, USER_ID, STRUCT_ID));
create table UP_LAYOUT_PARAM (USER_ID integer not null, LAYOUT_ID integer not null, STRUCT_ID integer not null, STRUCT_PARM_NM varchar(35) not null, STRUCT_PARM_VAL varchar(2000) not null, primary key (USER_ID, LAYOUT_ID, STRUCT_ID, STRUCT_PARM_NM));
create table UP_SEQUENCE (SEQUENCE_NAME varchar(255) not null, SEQUENCE_VALUE integer, primary key (SEQUENCE_NAME));
create table UP_USER_PROFILE (USER_ID integer not null, PROFILE_ID integer not null, PROFILE_FNAME varchar(50) not null, PROFILE_NAME varchar(50), DESCRIPTION varchar(100), LAYOUT_ID integer, STRUCTURE_SS_ID integer, THEME_SS_ID integer, primary key (USER_ID, PROFILE_ID));
create table UP_GROUP (GROUP_ID varchar(240) not null, CREATOR_ID varchar(240) not null, ENTITY_TYPE_ID integer not null, GROUP_NAME varchar(255) not null, DESCRIPTION varchar(255), primary key (GROUP_ID));
create table UP_ENTITY_TYPE (ENTITY_TYPE_ID integer not null, ENTITY_TYPE_NAME varchar(255), DESCRIPTIVE_NAME varchar(255), primary key (ENTITY_TYPE_ID), unique (ENTITY_TYPE_NAME));
create table UP_GROUP_MEMBERSHIP (GROUP_ID varchar(200) not null, MEMBER_SERVICE varchar(80) not null, MEMBER_KEY varchar(200) not null, MEMBER_IS_GROUP varchar(1) not null, primary key (GROUP_ID, MEMBER_SERVICE, MEMBER_KEY, MEMBER_IS_GROUP));
create table UP_ENTITY_CACHE_INVALIDATION (ENTITY_TYPE_ID integer not null, ENTITY_KEY varchar(240) not null, INVALIDATION_TIME timestamp not null, ENTITY_CACHE_ID integer not null, primary key (ENTITY_TYPE_ID, ENTITY_KEY));
create table UP_ENTITY_LOCK (ENTITY_TYPE_ID integer not null, ENTITY_KEY varchar(240) not null, LOCK_TYPE integer not null, EXPIRATION_TIME timestamp not null, LOCK_OWNER varchar(240) not null, primary key (ENTITY_TYPE_ID, ENTITY_KEY, LOCK_OWNER, EXPIRATION_TIME));
create table UP_ENTITY_PROP (ENTITY_TYPE_ID integer not null, ENTITY_KEY varchar(255) not null, PROPERTY_NAME varchar(150) not null, PROPERTY_VALUE varchar(255), LAST_MODIFIED timestamp not null, primary key (ENTITY_TYPE_ID, ENTITY_KEY, PROPERTY_NAME));
create index UPU_DFLT_ID_IDX on UP_USER (USER_DFLT_USR_ID);
create index UPPERM_IDX__PETYPE on UP_PERMISSION (PERMISSION_TYPE);
create index UPPERM_IDX__OWNER on UP_PERMISSION (OWNER);
create index UPPERM_IDX__PRKEY on UP_PERMISSION (PRINCIPAL_KEY);
create index UPPERM_IDX__TARGET on UP_PERMISSION (TARGET);
create index UPPERM_IDX__ACTIVITY on UP_PERMISSION (ACTIVITY);
create index UPPERM_IDX__PRTYPE on UP_PERMISSION (PRINCIPAL_TYPE);
create index UPG_GROUP_NAME_IDX on UP_GROUP (GROUP_NAME);
